# Generated by Django 5.1.1 on 2024-09-30 13:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Barber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socialInsuranceNumber', models.CharField(help_text='Enter the 9-digit Social Insurance Number (SIN) without spaces or dashes.', max_length=9, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'The Social Insurance Number must be exactly 9 digits.')], verbose_name='Social Insurance Number (SIN)')),
                ('emergencyContactName', models.CharField(help_text='Enter the full name of the emergency contact.', max_length=100, verbose_name='Emergency Contact Name')),
                ('emergencyContactPhoneNumber', models.CharField(help_text='Enter a valid phone number for the emergency contact. Include country code if necessary.', max_length=15, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', 'Enter a valid phone number. Include the country code if necessary.')], verbose_name='Emergency Contact Phone Number')),
                ('emergencyContactRelationship', models.CharField(help_text='Specify the relationship of the emergency contact to the barber (e.g., parent, sibling, friend).', max_length=100, verbose_name='Emergency Contact Relationship')),
                ('profileImage', models.ImageField(help_text='Upload a profile image for the barber.', upload_to='profile_images/', verbose_name='Profile Image')),
                ('user', models.OneToOneField(help_text='The user associated with this barber.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
            options={
                'verbose_name': 'Barber',
                'verbose_name_plural': 'Barbers',
            },
        ),
        migrations.CreateModel(
            name='UserExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='Enter the phone number with area code. Max 12 characters.', max_length=12, validators=[django.core.validators.RegexValidator('^\\+?\\d{10,15}$', 'Enter a valid phone number. Include the country code if necessary.')], verbose_name='Phone Number')),
                ('addressLine1', models.CharField(blank=True, help_text='Primary address line. E.g., street address or P.O. Box.', max_length=150, null=True, verbose_name='Address Line 1')),
                ('addressLine2', models.CharField(blank=True, help_text='Secondary address information. E.g., Apartment or suite number.', max_length=150, null=True, verbose_name='Address Line 2')),
                ('province', models.CharField(blank=True, choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('YT', 'Yukon')], default='QC', help_text='Select the province or territory for this customer.', max_length=2, verbose_name='Province')),
                ('postal_code', models.CharField(blank=True, help_text='The postal code in 6-character format.', max_length=6, null=True, verbose_name='Postal Code')),
                ('user', models.OneToOneField(help_text='The user associated with this customer information.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
            options={
                'verbose_name': 'User Information',
                'verbose_name_plural': 'User Information',
            },
        ),
    ]
